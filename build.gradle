plugins {
    id 'kotlin-multiplatform' version '1.3.30'
    id "org.jetbrains.kotlin.android.extensions" version "1.3.30"
    id 'com.android.application' version '3.4.0'
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "de.nantoka.mppexample"
        minSdkVersion 16
        targetSdkVersion 28
        multiDexEnabled true

        versionCode = 1
        versionName = "0.1"
    }

    sourceSets {
        main {
            setRoot("src/androidMain")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

kotlin {
    jvm()
    js()
    android()
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        androidMain {
            dependencies {
                implementation fileTree(dir: 'libs', include: ['*.jar'])
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.30"
                implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
                implementation 'androidx.core:core-ktx:1.1.0-alpha05'
                implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
                implementation 'com.google.android.material:material:1.1.0-alpha05'

                implementation "com.squareup.retrofit2:retrofit:2.5.0"
                implementation "com.squareup.retrofit2:converter-gson:2.5.0"

                implementation 'com.squareup.picasso:picasso:2.71828'
            }
        }
    }

    //see https://github.com/JetBrains/kotlin/blob/503f061c8c00c1b1a56148694ffbf54181b0e070/idea/idea-gradle/src/org/jetbrains/kotlin/idea/configuration/KotlinGradleWebMultiplatformModuleBuilder.kt#L289-L302
    task populateWebFolder(dependsOn: [jsMainClasses]) {
        doLast {
            delete(files("${projectDir}/out/js"))
            copy {
                def jsCompilations = kotlin.targets.js.compilations
                includeEmptyDirs = false
                from jsCompilations.main.output
                from kotlin.sourceSets.jsMain.resources.srcDirs
                jsCompilations.test.runtimeDependencyFiles.each {
                    if (it.exists() && !it.isDirectory()) {
                        from zipTree(it.absolutePath).matching { include '*.js' }
                    }
                }
                include "**/*.js"
                exclude "**/*.meta.js"
                exclude "**/*-test.js"
                into "${projectDir}/out/js"
            }
        }
    }
}